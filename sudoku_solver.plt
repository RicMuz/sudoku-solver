:-include(sudoku_solver).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              TRANSPOSE OF MATRIX
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:-begin_tests(transpose).

test(empty):-transpose([],[]).

test(one_by_one):-transpose([[1]],[[1]]).

test(three_by_three):-transpose([[1,2,3],[4,5,6],[7,8,9]],[[1,4,7],[2,5,8],[3,6,9]]).

test(two_by_three):-transpose([[1,2,3],[4,5,6]],[[1,4],[2,5],[3,6]]).

test(bad_input,[fail]):-transpose([1],_).

:-end_tests(transpose).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                        FINDING COORDINATES OF FIRST APPEARENCE OF GIVEN ELEMENT IN MATRIX
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:-begin_tests(find_first_appearence_in_matrix).

test(single_appearence_first):-find_first_appearence_in_matrix(0,[[0,2,3],[4,5,6],[7,8,9]],0,0).

test(single_appearence_middle):-find_first_appearence_in_matrix(0,[[1,2,3],[4,0,6],[7,8,9]],1,1).

test(single_appearence_last):-find_first_appearence_in_matrix(0,[[1,2,3],[4,5,6],[7,8,0]],2,2).

test(multiple_appearences_fist_line):-find_first_appearence_in_matrix(0,[[0,2,0],[4,0,6],[7,8,0]],0,0).

test(multiple_appearences_second_line):-find_first_appearence_in_matrix(0,[[1,2,3],[0,0,6],[7,8,0]],0,1).

test(multiple_appearences_third_line):-find_first_appearence_in_matrix(0,[[1,2,3],[4,5,6],[7,0,0]],1,2).

test(does_not_contain,[fail]):-find_first_appearence_in_matrix(0,[[1,2,3],[4,5,6],[7,8,9]],_,_).

:-end_tests(find_first_appearence_in_matrix).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                    EXTRACTING LINE, ROW AND SQUARE BY COORDINATES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:-begin_tests(columns_rows_squares).

test(first_row):-nth_row(0,[[1,2,3],[4,5,6],[7,8,9]],[1,2,3]).

test(last_row):-nth_row(2,[[1,2,3],[4,5,6],[7,8,9]],[7,8,9]).

test(row_out_of_range,[fail]):-nth_row(3,[[1,2,3],[4,5,6],[7,8,9]],_).

test(first_column):-nth_column(0,[[1,2,3],[4,5,6],[7,8,9]],[1,4,7]).

test(last_column):-nth_column(2,[[1,2,3],[4,5,6],[7,8,9]],[3,6,9]).

test(column_out_of_range,[fail]):-nth_column(3,[[1,2,3],[4,5,6],[7,8,9]],_).

test(square_left_upper_corner_of_square):-square(0, 0,[[1,2,3,0,0,0,0,0,0],[4,5,6,0,0,0,0,0,0],[7,8,9,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[1,2,3,4,5,6,7,8,9]).

test(square_right_lower_corner_of_square):-square(2, 2, [[1,2,3,0,0,0,0,0,0],[4,5,6,0,0,0,0,0,0],[7,8,9,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[1,2,3,4,5,6,7,8,9]).

test(square_from_midle_part_of_grid):-square(8,4,[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,2,3],[0,0,0,0,0,0,4,5,6],[0,0,0,0,0,0,7,8,9],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[1,2,3,4,5,6,7,8,9]).

test(square_right_lower_part_of_grid):-square(8,8,[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,2,3],[0,0,0,0,0,0,4,5,6],[0,0,0,0,0,0,7,8,9]],[1,2,3,4,5,6,7,8,9]).

test(square_out_of_range,[fail]):-square(9,9,[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],_).

:-end_tests(columns_rows_squares).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                    REPLACING ELEMENT AT GIVEN COORDINATES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:-begin_tests(replace_in_matrix).

test(replace_left_upper_corner):-replace_element_in_matrix(0, 0, 0,[[1,2,3],[4,5,6],[7,8,9]],[[0,2,3],[4,5,6],[7,8,9]]).

test(replace_right_lower_corner):-replace_element_in_matrix(2, 2, 0,[[1,2,3],[4,5,6],[7,8,9]],[[1,2,3],[4,5,6],[7,8,0]]).

test(replace_random):-replace_element_in_matrix(2, 1, 0,[[1,2,3],[4,5,6],[7,8,9]],[[1,2,3],[4,5,0],[7,8,9]]).

test(replace_out_of_range,[fail]):-replace_element_in_matrix(9, 9, 0,[[1,2,3],[4,5,6],[7,8,9]],_).

:-end_tests(replace_in_matrix).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                       SOLVE SUDOKU
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:-begin_tests(solve_sudoku).

test(sudoku_1,[nondet]):-solve_sudoku([[0,1,0,0,6,0,0,5,0],[0,3,0,2,0,7,0,1,0],[6,0,0,1,0,9,0,0,2],[0,0,1,0,2,0,9,0,0],[0,8,0,0,0,0,0,7,0],[0,0,5,0,7,0,8,0,0],[4,0,0,6,0,5,0,0,7],[0,6,0,7,0,2,0,3,0],[0,7,0,0,3,0,0,2,0]],[[9,1,2,8,6,3,7,5,4],[8,3,4,2,5,7,6,1,9],[6,5,7,1,4,9,3,8,2],[7,4,1,5,2,8,9,6,3],[3,8,6,4,9,1,2,7,5],[2,9,5,3,7,6,8,4,1],[4,2,3,6,8,5,1,9,7],[5,6,9,7,1,2,4,3,8],[1,7,8,9,3,4,5,2,6]]).

test(sudoku_2,[nondet]):-solve_sudoku([[0,6,0,0,0,3,0,0,0],[0,0,0,8,0,0,9,6,2],[0,0,0,0,2,0,0,8,0],[0,0,5,0,0,8,0,4,0],[2,3,0,0,0,0,0,1,6],[0,8,0,7,0,0,3,0,0],[0,5,0,0,7,0,0,0,0],[1,4,8,0,0,5,0,0,0],[0,0,0,1,0,0,0,5,0]],[[8,6,2,9,4,3,5,7,1],[3,7,4,8,5,1,9,6,2],[5,9,1,6,2,7,4,8,3],[6,1,5,2,3,8,7,4,9],[2,3,7,5,9,4,8,1,6],[4,8,9,7,1,6,3,2,5],[9,5,6,4,7,2,1,3,8],[1,4,8,3,6,5,2,9,7],[7,2,3,1,8,9,6,5,4]]).

test(sudoku_3,[nondet]):-solve_sudoku([[0,0,0,5,0,0,0,0,0],[0,7,0,0,2,0,4,0,0],[4,5,1,7,9,0,8,0,6],[0,2,0,0,0,0,5,3,1],[0,0,5,0,0,0,6,0,0],[9,3,6,0,0,0,0,7,0],[6,0,7,0,1,8,3,5,2],[0,0,2,0,6,0,0,4,0],[0,0,0,0,0,5,0,0,0]],[[2,6,9,5,8,4,7,1,3],[3,7,8,1,2,6,4,9,5],[4,5,1,7,9,3,8,2,6],[8,2,4,6,7,9,5,3,1],[7,1,5,4,3,2,6,8,9],[9,3,6,8,5,1,2,7,4],[6,4,7,9,1,8,3,5,2],[5,9,2,3,6,7,1,4,8],[1,8,3,2,4,5,9,6,7]]).

test(sudoku_4,[nondet]):-solve_sudoku([[0,0,0,6,0,7,0,0,0],[5,0,0,0,0,0,0,0,8],[0,1,6,0,2,0,4,9,0],[0,4,7,9,0,1,0,5,0],[0,0,0,0,0,0,0,0,0],[0,6,0,8,0,2,1,3,0],[0,9,4,0,6,0,5,2,0],[7,0,0,0,0,0,0,0,9],[0,0,0,3,0,5,0,0,0]],[[4,3,9,6,8,7,2,1,5],[5,7,2,1,4,9,3,6,8],[8,1,6,5,2,3,4,9,7],[2,4,7,9,3,1,8,5,6],[3,8,1,4,5,6,9,7,2],[9,6,5,8,7,2,1,3,4],[1,9,4,7,6,8,5,2,3],[7,5,3,2,1,4,6,8,9],[6,2,8,3,9,5,7,4,1]]).

test(sudoku_5,[nondet]):-solve_sudoku([[0,9,0,8,0,5,0,0,0],[0,2,0,0,0,0,0,0,9],[5,0,8,0,4,0,0,2,0],[0,0,9,0,0,3,0,0,8],[0,0,0,9,0,7,0,0,0],[3,0,0,4,0,0,2,0,0],[0,3,0,0,1,0,7,0,2],[4,0,0,0,0,0,0,5,0],[0,0,0,7,0,4,0,3,0]],[[6,9,3,8,2,5,1,7,4],[1,2,4,3,7,6,5,8,9],[5,7,8,1,4,9,6,2,3],[7,1,9,2,5,3,4,6,8],[8,4,2,9,6,7,3,1,5],[3,6,5,4,8,1,2,9,7],[9,3,6,5,1,8,7,4,2],[4,8,7,6,3,2,9,5,1],[2,5,1,7,9,4,8,3,6]]).

test(sudoku_6,[nondet]):-solve_sudoku([[9,0,0,0,0,0,2,0,4],[0,0,0,0,0,0,0,1,0],[3,1,0,6,2,4,0,0,0],[0,6,9,4,0,0,1,2,0],[0,0,0,0,8,0,0,0,0],[0,7,4,0,0,3,6,9,0],[0,0,0,7,3,8,0,5,1],[0,3,0,0,0,0,0,0,0],[4,0,8,0,0,0,0,0,9]],[[9,8,6,3,5,1,2,7,4],[2,4,5,8,9,7,3,1,6],[3,1,7,6,2,4,9,8,5],[8,6,9,4,7,5,1,2,3],[1,2,3,9,8,6,5,4,7],[5,7,4,2,1,3,6,9,8],[6,9,2,7,3,8,4,5,1],[7,3,1,5,4,9,8,6,2],[4,5,8,1,6,2,7,3,9]]).

:-end_tests(solve_sudoku).


